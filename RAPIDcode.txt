MODULE ArcProgram
    VAR socketdev socket1;
    VAR string CMDString;
    VAR string PosString;
    VAR num retry_no:=0;
    VAR string flagString;
    VAR string tansString;
    VAR string rotString;
    VAR string robconfString;
    VAR string extaxString;
    VAR robtarget target_POS;
    VAR pos xyzPos;
    VAR bool convertOk1;
    VAR bool convertOk2;
    VAR bool convertOk3;
    VAR bool convertOk4;

    PROC main()
        SocketCreate socket1;
        SocketConnect socket1,"192.168.56.1",4999,\Time:=2;

        WHILE TRUE DO
            SocketReceive socket1,\Str:=CMDString;
            cmdExplain(CMDString);
        ENDWHILE

    ERROR
        IF ERRNO=ERR_SOCK_TIMEOUT THEN
            IF retry_no<200 THEN
                ResetRetryCount;
                WaitTime 1;
                retry_no:=retry_no+1;
                RETRY;
            ELSE
                RAISE ;
            ENDIF
        ENDIF
    ENDPROC


    PROC cmdExplain(string cmd)
        TEST cmd
        CASE "CurPos":
            CurPos;
        CASE "RecPos":
            RecPos;
        DEFAULT:
            Stop;
        ENDTEST
    ENDPROC

    PROC CurPos()
        VAR robtarget p1;
        p1:=CRobT(\Tool:=tool0\WObj:=wobj0);
        PosString:=ValToStr(p1.trans);
        PosString:=PosString+ValToStr(p1.rot);
        SocketSend socket1\Str:=PosString;
    ENDPROC

    PROC RecPos()
        ConfJ\On;
       SocketSend socket1\Str:="ready";
       SocketReceive socket1\Str:=flagString,\Time:=5;
       SocketSend socket1\Str:="flagString received";
        WHILE flagString="Start" DO
            SocketReceive socket1\Str:=tansString;
            SocketSend socket1\Str:="tansString received";
            SocketReceive socket1\Str:=rotString;
            SocketSend socket1\Str:="rotString received";
            SocketReceive socket1\Str:=robconfString;
            SocketSend socket1\Str:="robconfString received";
            SocketReceive socket1\Str:=extaxString;
            SocketSend socket1\Str:="extaxString received";
            convertOk1:=StrToVal(tansString,target_POS.trans);
            convertOk2:=StrToVal(rotString,target_POS.rot);
            convertOk3:=StrToVal(robconfString,target_POS.robconf);
            convertOk4:=StrToVal(extaxString,target_POS.extax);
            IF convertOk1 AND convertOk2 AND convertOk3 AND convertOk4=TRUE then
                MoveJ target_POS,v100,z50,tool0;
                tansString:="";
                rotString:="";
                robconfString:="";
                extaxString:="";
            ELSE
                Break;
            ENDIF
            ConfJ\Off;
            SocketSend socket1\Str:="ready";
            SocketReceive socket1\Str:=flagString,\Time:=5;
            SocketSend socket1\Str:="flagString received";
        ENDWHILE
    ENDPROC

ENDMODULE